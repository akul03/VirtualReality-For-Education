using UnityEngine;
using UnityEngine.UI;
using UnityEngine.Networking;
using System.Collections;
using TMPro;
using System;
using static System.Net.Mime.MediaTypeNames;

[Serializable]
public class PromptData
{
    public string prompt;
}

public class AIRequestUI : MonoBehaviour
{
    public Text responseTextnow;
    public Text reponseTextForInfo;

    public void OnButtonClick()
    {
        SendRequest("your name is Virtual Teacher, you are an AI teacher and a personalised instructor , maintain a proffesional tone and introduce yourself as if you are a professional teacher and you are introducing yourself to you student.now your response should be in a way that you are talking to your student and make it around 25 words", responseTextnow);
    }

    public void OnInfoClick()
    {
        SendRequest("Instruct and explain the fundamentals of 3D Geometry. Provide clear and concise answers, maintaining a professional and educational tone throughout.\"", reponseTextForInfo);
    }

    public void SendRequest(string prompt, Text targetText)
    {
        string url = "http://127.0.0.1:5000/generate_response";//   Replace it with the url generated by you

        PromptData promptData = new PromptData
        {
            prompt = prompt
        };

        string jsonData = JsonUtility.ToJson(promptData);

        StartCoroutine(MakeRequest(url, jsonData, targetText));
    }

    IEnumerator MakeRequest(string url, string jsonData, Text targetText)
    {
        UnityWebRequest request = new UnityWebRequest(url, "POST");
        byte[] bodyRaw = System.Text.Encoding.UTF8.GetBytes(jsonData);
        request.uploadHandler = new UploadHandlerRaw(bodyRaw);
        request.downloadHandler = new DownloadHandlerBuffer();
        request.SetRequestHeader("Content-Type", "application/json");

        yield return request.SendWebRequest();

        if (request.result == UnityWebRequest.Result.Success)
        {
            string responseTextValue = request.downloadHandler.text;
            string trimmedstring = responseTextValue.Substring(13);
            trimmedstring = trimmedstring.Substring(0, trimmedstring.Length - 3);
            targetText.text = trimmedstring;
        }
        else
        {
            targetText.text = $"Error: {request.error}";
        }
    }
}
